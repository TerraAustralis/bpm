(name 'GraphViz-jupiter.60' message '''initial' id 'ca63e08c-6363-46c1-9866-cb854409e024' date '02/13/2015' time '19:21:49' author 'jupiter' ancestors ((name 'GraphViz-jupiter.59' message '' id 'd927a8f1-c5a8-4214-ad57-197eb7333d8b' date '09/25/2014' time '15:25:55' author 'jupiter' ancestors ((name 'GraphViz-jupiter.58' message '' id 'bebc9b68-159d-4db5-ac63-f13b5e71e5c1' date '09/07/2014' time '14:06:29' author 'jupiter' ancestors ((name 'GraphViz-jupiter.57' message '' id 'ef9ecc36-2441-4ada-992e-2a2dd500b5e3' date '09/06/2014' time '15:06:59' author 'jupiter' ancestors ((name 'GraphViz-jupiter.56' message 'patched outputPath' id 'bf3bc7a9-9564-428f-8c95-3efa07463d85' date '09/05/2014' time '15:16:49' author 'jupiter' ancestors ((name 'GraphViz-sig.55' message 'backup' id 'ef266eea-ada7-4340-8f9a-644a218b1c19' date '01/13/2009' time '06:33:49' author 'sig' ancestors ((name 'GraphViz-miki.54' message 'Another fix...' id 'fb701ae3-8d65-41d8-af82-0471dddb231e' date '11/05/2008' time '16:40:42' author 'miki' ancestors ((name 'GraphViz-miki.53' message 'More GemStone fixes.' id '2e00875f-5191-4485-b0a3-3301a0e0e25e' date '11/05/2008' time '16:32:29' author 'miki' ancestors ((name 'GraphViz-miki.52' message 'Fixed a string compatibility problem.' id 'e72eb6cf-63fd-41b5-8e68-dc59689e1cdc' date '11/05/2008' time '14:35:54' author 'miki' ancestors ((name 'GraphViz-miki.51' message 'Changed directory class to ServerFileDirectory' id '803c1127-8006-485c-929b-83dc47f39383' date '11/05/2008' time '13:54:27' author 'miki' ancestors ((name 'GraphViz-miki.50' message 'Fixed a syntax error.' id '2ef1e27f-f1ad-4e2c-9587-def5c13d8dbc' date '11/05/2008' time '12:16:32' author 'miki' ancestors ((name 'GraphViz-miki.49' message 'First shot at a Graphviz generator for GemStone.' id '5458922a-0dc3-4bd3-883c-6fa2e7a91766' date '11/05/2008' time '12:11:14' author 'miki' ancestors ((name 'GraphViz-miki.48' message 'Removed methods in OSProcessMacOSGraphVizGenerator, since these are not needed with the new install method for Graphviz on the Mac.' id '4427b6d5-0e2b-48e6-83ac-bce557b57790' date '10/16/2008' time '16:16:52' author 'miki' ancestors ((name 'GraphViz-gk.47' message 'Trivial fix to work in 3.10.' id '76a26e2a-8085-4738-be5e-55b65f8bcc14' date '06/26/2008' time '15:16:45' author 'gk' ancestors ((name 'GraphViz-kph.46' message '- removed add:with:id: scheme, using attributes instead until GraphViz can be comprehensively fixed on the double edge bug.' id '83298022-2099-11dc-b980-000a95edb42a' date '06/22/2007' time '09:21:01' author 'kph' ancestors ((name 'GraphViz-kph.45' message '- Moved all gjallar changes into this package, 	rather than as *q2 extensions ' id '83f9dd3b-ad97-4231-8a3e-0c78bc7bb165' date '06/21/2007' time '17:34:49' author 'kph' ancestors ((name 'GraphViz-kph.44' message '- refactored the Generators to prefer OSProcess if it is available for the MacOS and to use a decent test to see if the plug in is actually available.' id '46d2365e-1683-11dc-aba9-000a95edb42a' date '06/09/2007' time '13:16:39' author 'kph' ancestors ((name 'GraphViz-gk.43' message 'Just lowered a small delay.' id '6ef92fa6-c75f-cf46-a2ba-5a644cd3f508' date '11/20/2006' time '20:01:11' author 'gk' ancestors ((name 'GraphViz-jrp.42' message 'Fixed issue with current style getting mutated when printing the style of a note that merely inherits from it.' id '0ef352a4-608a-224e-88a8-3a626bef4e62' date '05/15/2005' time '00:16:32' author 'jrp' ancestors ((name 'GraphViz-jrp.41' message 'Small fix for Squeak 3.8 and new string issues' id 'e6503e8f-62b2-b24e-8b3e-7c264895bb35' date '05/02/2005' time '23:47:16' author 'jrp' ancestors ((name 'GraphViz-bvs.40' message 'Columbus Dynamic Languages Group May 2005. A few changes to help Carbon VM Mac users, based on Edgar DeCleene''s work.' id 'c22df972-bb77-11d9-b8c5-00306569dd28' date '05/02/2005' time '22:05:01' author 'bvs' ancestors ((name 'GraphViz-jrp.39' message 'Made arrow head rendering in Connectors graph honor the direction and arrowhead / arrowtail properties for the graph.  Currently only renders normal or no arrow head on either head or tail or both ends per the graph spec.' id '3b5efbf7-ff54-9f4b-a896-a27a64eba8b8' date '04/04/2005' time '05:29:49' author 'jrp' ancestors ((name 'GraphViz-jrp.38' message 'Fixed the problem with connector edge vertices.  Now the vertices are put on the edges from GraphViz.  Also handle shape=box now in the Connectors graph.' id '75aca2c9-7a9f-d14a-9d5f-7fed0eee826d' date '04/03/2005' time '17:09:41' author 'jrp' ancestors ((name 'GraphViz-jrp.37' message 'Put the pasteUp morph into a scroll pane for the Connectors version of the display.Also added a helper to GraphViz so you can call #openInteractive to open up a Connectors-based version of the graph.Still much more to do to map GraphViz to connectors behavior.  Node styles, line styles, and line contours all need to be addressed still, but it isn''t too bad as it stands right now.' id '04501c33-b9dc-4d47-a29e-59f161cb8f14' date '03/29/2005' time '22:06:57' author 'jrp' ancestors ((name 'GraphViz-jrp.36' message 'Made Connectors graphs open on pasteup morphs in a windows.' id '9ac42e67-0102-7545-ab9c-89aed69aba75' date '03/29/2005' time '21:09:45' author 'jrp' ancestors ((name 'GraphViz-jrp.35' message 'Added more Mac OS fixes from Edgar, plus added the ability to get the current inherited style on an existing node.e.g.graph _ GraphViz new.graph add: #node with: #color -> #blue. "a node level attribute"graph add: #A.(graph nodeNamed: #A) color	"should be #blue"	Of course, you could always access the attributes added to a node or edge, but now the inherited node / edge attributes are merged into the local list of node / edge attributes.' id 'a3bc78eb-77e9-af48-ba41-bad4893e52c9' date '03/29/2005' time '19:41:17' author 'jrp' ancestors ((name 'GraphViz-jrp.34' message 'Some odds and ends addressed.' id '6baff3cb-5d1f-cc45-be54-fc28e167159b' date '03/29/2005' time '13:32:45' author 'jrp' ancestors ((name 'GraphViz-jrp.33' message 'Added new class category for generators and revised class hierarchy sample to flip arrow heads to show subclass relationships properly.' id '1c4773a2-7f14-2b4a-9a31-5636425fb1be' date '03/27/2005' time '19:47:22' author 'jrp' ancestors ((name 'GraphViz-jrp.32' message 'Removed lint.' id '2a248605-9235-b445-be71-558732699f2d' date '03/27/2005' time '19:26:29' author 'jrp' ancestors ((name 'GraphViz-jrp.31' message 'Cleaned up some method names with respect to files, paths, and filedirectories to be more intentional in the naming and what you should expect as a return value.' id '1863f07e-07f1-3140-8c14-6992a233ae0e' date '03/27/2005' time '18:02:35' author 'jrp' ancestors ((name 'GraphViz-jrp.30' message 'Another fix for MacOS (from David Lewis) plus more work on trying to get edges to display in Connectors using the coordinates from GraphViz -- not yet finished with that.' id '3de58597-469f-7f44-9065-5960f6802c96' date '03/27/2005' time '17:35:27' author 'jrp' ancestors ((name 'GraphViz-jrp.29' message 'Another change from David Lewis on generater class stuff.' id '2e8add2d-1603-2645-80c0-4ad79636f0ff' date '03/26/2005' time '16:58:36' author 'jrp' ancestors ((name 'GraphViz-jrp.28' message 'Added GraphViz Connectors demo.' id '15024428-b56d-154c-a50f-de45c81b8eea' date '03/26/2005' time '10:45:54' author 'jrp' ancestors ((name 'GraphViz-jrp.27' message 'A few fixes from my Unix and Mac friends.' id '3bb843ab-8818-d44f-aad8-38c3c7de0fc1' date '03/26/2005' time '09:42:21' author 'jrp' ancestors ((name 'GraphViz-jrp.26' message 'Add all the GraphViz colors to class side of GraphViz (see #colors).  It returns a dictionary of names to actual Squeak Color instances.Also made the Connector graphs honor the fill color of the GraphViz graph when you render a Connectors diagram from a GraphViz graph.More work to handle shapes and other properties will come as I see the need.' id '0b127c07-f931-cf4c-af5c-1eb77274ffea' date '03/26/2005' time '01:52:31' author 'jrp' ancestors ((name 'GraphViz-jrp.25' message 'Integrated changeset for MacOS from Edgar J. De Cleene.  I don''t really kow if it works or not as I cannot test it, but I was careful in refactoring and will need Edgar to test.' id 'c701c3d0-43d7-2b41-b78f-42d3d792ad21' date '03/25/2005' time '20:51:35' author 'jrp' ancestors ((name 'GraphViz-jrp.24' message 'Some CrLf fixes from David Lewis for the Unix platform.' id 'f1a6ffab-b627-a447-8b96-db5ab5161e90' date '03/25/2005' time '19:05:44' author 'jrp' ancestors ((name 'GraphViz-jrp.23' message 'Added some helpers from David Lewis.  Also further enhanced the Win32 generator to be more tolerant to how files are generated (e.g. they could be zero byte) and block the Squeak process only if the output file is "locked" (e.g. you cannot open the file in read/write mode) and the modification time is newer than before we tried to generate the output file.  It used to look for a non-zero length file as well which doesn''t always happen.' id '7a6f52a4-e0cb-d043-bd89-28f1a36dd067' date '03/20/2005' time '23:14:47' author 'jrp' ancestors ((name 'GraphViz-jrp.22' message 'A few more fixes from David Lewis to clean up test cases and to only instantiate the Unix generator when on Mac when using the Unix VM.' id '1cd03a27-618d-884f-b089-aa56d41b7d4f' date '03/20/2005' time '22:23:57' author 'jrp' ancestors ((name 'GraphViz-jrp.21' message 'Started to add Connectors display of a graph.  Very basic for now and doesn''t handle any style or shape issues of the graph.  It just throws up yellow ellipses for each node in the right position as dictated by GraphViz algorithms.Also fixed up a few defects with doLayout as not all nodes were processed -- now they are and all nodes (even nodes defined in subgraphs) are updated with coordinates from GraphViz.Lastly, a few graph defects were remedied.  For example, if you defined a node with exactly the same id in a subgraph a new node used to be created.  Now nodes with the same id are all the same node object.  Also the fromNode and toNode of edge objects is not an ID reference, but now a reference to the actual node instance (for convenience).' id 'ddff8819-2854-e446-aacc-dadf76a192fe' date '03/20/2005' time '22:09:05' author 'jrp' ancestors ((name 'GraphViz-jrp.20' message 'Merged changeset from David Lewis to add Unix and Mac OS support.  This is the first edition to be released with Win32, Unix, and Mac OS support.  Should there be any troubles let me know as I cannot run tests on the Unix and Mac edition.' id '86281518-12de-e94d-bfeb-fdd8acdfe8fc' date '03/19/2005' time '19:31:15' author 'jrp' ancestors ((name 'GraphViz-jrp.19' message 'Stubbed in Mac and Unix classes for generating graphs (e.g. by shelling out in those environments).' id '7a542618-3090-af43-9524-84960dfa555e' date '03/19/2005' time '09:20:59' author 'jrp' ancestors ((name 'GraphViz-jrp.18' message 'Add a convenience method to create rank nodes all the same.  Also added the ability for the Win32 generator to keep the temp files cleaned up.  Also added the ability to add node placement parameters to a graph by sending doLayout to a graph.  This will generate the graph, convert to XML, then read the height, width, and position attributes for each node and ram them back into the graph model.e.g.graph := GraphViz new.graph add: #A.graph doLayout."print x in inches" (graph nodes at: #A) x."print y in inches" (graph nodes at: #A) y."print height in inches" (graph nodes at: #A) height."print width in inches" (graph nodes at: #A) width.' id '37d1a832-8e69-6149-84ed-f9d2076f78bb' date '03/18/2005' time '23:47:51' author 'jrp' ancestors ((name 'GraphViz-jrp.17' message 'Migrated all platform-specific generation functionality to the Win32GraphVizGenerator class.  GraphVizGenerator now has 3 template methods that need to be implemented by other plaform providers:1. createMorph		"returns a morph"2. createXMLDocument	"returns an XMLDocument made by dot2gxl"3. make:	"makes the file specified by the output format parameter"	For now, this represents the basic interface in Squeak.  You can make a graph platform independently, then you send your graph to a platform-specific generator to either get a morph (for rendering in Squeak), get an XML Document (that represents the meta information of the graph after it gets laid out), or just use this package to generate graphs to some other external format (e.g. VRML or PostScript or one of the other myriad of output formats supported by GraphViz).In the immediate future I will try to implement a Unix and Mac generator from sources provided to me by folks in the community.' id '4ddfb6ed-90e3-ba44-80e8-2b7fa4fd6914' date '03/14/2005' time '00:12:18' author 'jrp' ancestors ((name 'GraphViz-jrp.16' message 'Added some convenience methods when building graphs to handle multiple edges or multiple nodes simply."this one adds three nodes"e.g. graph add: #(A B C)"this one adds three nodes with A pointing to B andB pointing to C"e.g. graph add: #A -> #B -> #CAlso fixed some defects with spaces in file names.  Also greatly enhanced the Smalltalk history sample diagram on class side GraphViz.  Check it out!' id '1e6ba47e-e4a5-9d44-bcfc-d88c193b7d23' date '03/13/2005' time '20:18:59' author 'jrp' ancestors ((name 'GraphViz-jrp.15' message 'Modified openInWindow to use a scrollPane.' id '56a684fe-be6d-f549-9ba9-b3150776a830' date '03/13/2005' time '17:05:19' author 'jrp' ancestors ((name 'GraphViz-jrp.14' message 'Fixed a sample so it was not dependent upon code from connectors just to run sample.  Also distinguished data nodes (the usual ones you think of) from style nodes (e.g. node, edge, graph).  These style nodes look like regular nodes in an output dot file, but they really are meta nodes that affect style and are not drawn by GraphViz.  I tried to emulate this distinction in my graph model when you add meta nodes to it, they now appear under the "styles" collection of the graph.' id 'd78c67a6-e579-0348-b986-77cd94564644' date '03/13/2005' time '16:31:12' author 'jrp' ancestors ((name 'GraphViz-jrp.13' message 'Cleaned up the model quite a bit to use the new model-driven approach.  There are a few more things on my list to do (e.g. keep meta nodes out of the graph), but all the tests pass and I even fixed a defect in the sample program that shows class hierarchy.  There was an error before that inaccurately showed the hierarchy.' id '576a048d-aaf2-e74b-ae09-99f11cd29068' date '03/13/2005' time '15:08:22' author 'jrp' ancestors ((name 'GraphViz-jrp.12' message 'Major, major changes to GraphViz underlying implementation.  I''m not finished with this refactoring, but all tests pass so it is good to go still.  I just need to factor out the streaming implementation as the model-driven approach is now in place.  The client interface has not changed as I enjoy the streaming interface, but a composition style interface is also available.This is all towards the goal of having a "graph" model that is maintained by the GraphViz class so you can send the graph out to the command line program for node and edge placement, then have the coordinates reified into the graph object model.  Not there yet, but this was the first move.' id '010c6e6a-6225-c541-8ec6-affec9dac38f' date '03/11/2005' time '20:16:59' author 'jrp' ancestors ((name 'GraphViz-jrp.11' message 'Added ability to export a graph to a fully attributed Xml document.e.g.graph _ GraphViz new.graph add: #A.graph add: #B -> #C.graph asXml "-> an instance of XMLDocument"First the graph is sent through one of the GraphViz programs which does node and edge placement. The output is written in plain text to a "dot" file which has been fully attributed.Lastly, dot2gxl is run automatically (included in the GraphViz distro bin folder) and the resulting xml file is parsed and delivered as the result of asXml.  So then you can rip over the Xml any way you like and/or utilize the automatic layout however you like.Also made it easier to sub in other GraphVizGenerators should someone want to build a Mac or Unix edition.Also I totally reworked the primitive external process synchronization with the spawned windows process that does the graph generation.  Now instead of just trying periodically to load the resulting PNG or XML files inside an exception handling loop, I look to see if the file really exists and has a newer modification timestamp (if appropriate) and that the file size is non-zero. This works on Windows quite well as when a file is pre-existent and getting written over by a subsequent process, the file size goes to zero during the writting process and is finally non-zero when the writing process is finished.  I use this fact to synchronize Squeak with the GraphViz programs to ensure it is done writing the output file before trying to read it.Ugh!  I''m tired and putting this aside for a bit.' id 'fbf9abc6-7f35-2148-b1ef-b80e69f00287' date '03/05/2005' time '22:09:11' author 'jrp' ancestors ((name 'GraphViz-jrp.10' message 'Made some changes to samples as I learn how to layout graphs.  Also made it easier to generate files by putting the make: helper on GraphViz.' id '312f806c-274f-1642-b597-f00412f72ff1' date '03/04/2005' time '22:11:07' author 'jrp' ancestors ((name 'GraphViz-jrp.9' message 'Refactored writing dot and generating files to be in the generator class solely.  Also made the generator default to writing into a "dot" folder under the default directory so as to not clutter up the Squeak folder.  This output path is configurable on the generator class, but by default it goes to a separate folder for easy cleanup.  Added a few more samples.' id '84607f95-4978-044c-931b-033be1c18cde' date '03/03/2005' time '22:45:45' author 'jrp' ancestors ((name 'GraphViz-jrp.8' message 'Added more samples and added options to generate using fdp and twopi programs' id 'fced0cd1-de5d-4545-a416-8fb0a3c9d1fc' date '03/03/2005' time '00:35:10' author 'jrp' ancestors ((name 'GraphViz-jrp.7' message 'Slightly modified subgraphing behavior to drop the useless block arg.' id '42b63b1b-2c97-0e47-b7c4-d86c97546706' date '03/01/2005' time '07:41:01' author 'jrp' ancestors ((name 'GraphViz-jrp.6' message 'Added sample that shows how to diagram class references' id 'e38420e8-71c6-6247-a1b6-d0fb9fcd8713' date '03/01/2005' time '00:32:17' author 'jrp' ancestors ((name 'GraphViz-jrp.5' message 'Added subgraph handling' id 'c504a292-0b9c-0e44-8e1b-c9b539e283e4' date '03/01/2005' time '00:06:00' author 'jrp' ancestors ((name 'GraphViz-jrp.4' message 'Added feature to automatically put IDs in double quotes if they are not consider safe by DOT standards.' id 'aaedcc2e-23b3-2f47-9370-bdd444c1fec5' date '02/28/2005' time '00:17:52' author 'jrp' ancestors ((name 'GraphViz-jrp.3' message 'Split out the generating functions from the GraphViz class so we can sub in other platforms as necessary.' id '437e24de-22f4-ab4a-ba39-d35e9ec3ad09' date '02/27/2005' time '22:20:46' author 'jrp' ancestors ((name 'GraphViz-jrp.2' message 'Simplified interface' id '3dd70a48-f497-9249-8e2a-4d2b1d61b06b' date '02/27/2005' time '21:25:41' author 'jrp' ancestors ((name 'GraphViz-jrp.1' message 'Initial check-in' id '61a35e99-314b-234e-ae61-a7f2fab81b08' date '02/27/2005' time '12:07:43' author 'jrp' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())